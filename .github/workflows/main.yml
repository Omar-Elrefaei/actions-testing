name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
  
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable

      # - name: Dump GitHub context
      #   env:
      #     GITHUB_CONTEXT: ${{ toJson(github) }}
      #   run: |
      #     echo "$GITHUB_CONTEXT"
      #     echo ${{ github.event.pull_request.title }}
          

      - name: Jq commit mesg
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
        run: echo "$GITHUB_CONTEXT" | jq .event.commits[].message
        
      - name: cargo version
        run: cargo --version
        
      - name: Cache cross
        uses: actions/cache@v2.1.7
        with:
          # A list of files, directories, and wildcard patterns to cache and restore
          path: ~/.cargo/bin/cross
          key: cross1

#       - name: install cross
#         run: cargo install cross
        
      - name: setting up var URL
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
        run: |
          URL=$(echo $GITHUB_CONTEXT | jq .event.commits[].message) 
          echo URL=$URL >> $GITHUB_ENV
     
      - name: setting up var NAME
        run: |
          NAME=$(echo $URL | awk -F "/" '{ print $5 }' ) 
          echo NAME=$NAME >> $GITHUB_ENV

          
      - name: git clone and cross compile
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
        run: |
          git clone $URL
          cd $NAME
          cross build

      - uses: actions/upload-artifact@v2
        with:
          name: binary
          path: ${{env.NAME}}/target/debug/choose
      
